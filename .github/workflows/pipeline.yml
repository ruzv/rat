name: PIPELINE

on:
  push:
    branches: 
      - 'main'
    tags:
      - '*'
  pull_request:
    branches: 
      - 'master'

  workflow_dispatch:

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup go env
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x

      # - name: install gotestsum
        # run: go install gotest.tools/gotestsum@latest

      - name: install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.49.0

      - name: lint
        run: golangci-lint run

  #     - name: format
  #       run: ./check.sh format

  #     - name: test
  #       run: ./check.sh test unit

  #     - name: generate coverage report
  #       run: ./check.sh test report

  #     - name: comment coverage
  #       uses: coroo/pytest-coverage-commentator@v1.0.2
  #       with:
  #         pytest-coverage: pytest-coverage.txt

  # publish:
  #   needs: checks
  #   if: startsWith(github.ref, 'refs/tags')
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3

  #     - name: setup python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10' 
  #         cache: 'pip'
        
  #     - name: install build
  #       run: python -m pip install build --user
          
  #     - name: build wheel and source tarball
  #       run: python -m build --sdist --wheel --outdir dist/ .

  #     - name: publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         password: ${{ secrets.LOADERO_PYTHON_PYPI_API_TOKEN }}
