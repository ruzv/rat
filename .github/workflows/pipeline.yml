name: PIPELINE

on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
  pull_request:
permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read
jobs:
  lint:
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: "1.21"
      - uses: actions/checkout@v3
      - uses: golangci/golangci-lint-action@v3
        with:
          working-directory: src
          version: latest

  build_and_publish_docker_image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          # platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  # no need to build, unless job produces artifacts
  # build:
  #   needs: lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: "1.20"
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 20
  #     - uses: actions/checkout@v3
  #     - name: install web dependencies
  #       working-directory: web
  #       run: |
  #         npm install
  #     - name: build
  #       run: |
  #         ./build.sh -b
